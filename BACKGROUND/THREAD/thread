-------------------------------------------------------------------------------------------------
---------------------------------------- (Process) ----------------------------------------------

- OS가 우리가 작성할 프로그램을 실행시킬 때 관리하는 단위
* 하나의 프로세스가 여러개의 쓰레드 관리 가능

-------------------------------------------------------------------------------------------------
---------------------------------------- (HotFix) -----------------------------------------------
- 제품 사용 중에 발생하는 버그의 수정이나 취약점 보완 또는 성능 향상을 위해 (긴급 배포)되는 배치 프로그램

CPU 코어 수 확인 명령어 (cmd)
- wmic cpu get NumberOfCores
- wmic cpu get NumberOfLogicalProcessors

컴퓨터 시스템 정보 확인 명령어 (cmd)
- systeminfo

-------------------------------------------------------------------------------------------------
---------------------------------------- (Multi Threading) --------------------------------------

- 하나의 프로그램이 여러 서브 프로그램으로 구성되어 있는 형태
- 마치 여러 Thread들이 동시에 실행되는 것처럼 번갈아 가며 동작
- 여러개의 스레드들이 (하나의 메모리 공유)

-------------------------------------------------------------------------------------------------
---------------------------------------- (Thread) -----------------------------------------------

std::thread m_thread = std::thread(Run thread, PARAM parm);
m_thread.join();    // Main thread는 m_thread의 작업이 끝날 때 까지 기다려 준다.
                    // 작업이 끝나기 전까지는 다른 작업 하지 않는다.
                    // 싱글 스레드를 사용하는 것과 같은 결과

m_thread.detach();  // 작업이 끝날때 까지 기다리지 않고, 자신의 다른 작업 수행
                    // 멀티 스레드로 작업
                    // detach()한 스레드는 자신만의 작업 수행
joinable = join이나 detach가 호출되기 전